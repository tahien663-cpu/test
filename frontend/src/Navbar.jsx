import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom'; 
import { Sun, Moon, Menu, X, User, LogOut, Home, MessageSquare } from 'lucide-react'; 
import { motion, AnimatePresence } from 'framer-motion';

const CUSTOM_LOGO_PATH = '/logo.png'; 

export default function Navbar({ isChatPage, theme: controlledTheme, setTheme: setControlledTheme }) {

  const navigate = useNavigate(); 
  
  const [menuOpen, setMenuOpen] = useState(false);
  const [dropdownOpen, setDropdownOpen] = useState(false);
  const [uncontrolledTheme, setUncontrolledTheme] = useState('light');
  const [userName, setUserName] = useState('');
  const [showConfirm, setShowConfirm] = useState(false);
  // Th√™m state ƒë·ªÉ ki·ªÉm tra l·ªói t·∫£i ·∫£nh (t√πy ch·ªçn)
  const [imageError, setImageError] = useState(false); 

  useEffect(() => {
    // S·ª¨ D·ª§NG FIRESTORE CHO ·ª®NG D·ª§NG TH·ª∞C T·∫æ
    // L∆∞u √Ω: Trong m√¥i tr∆∞·ªùng th·ª±c, b·∫°n n√™n d√πng Firestore ho·∫∑c Context/Redux thay v√¨ localStorage
    const name = localStorage.getItem('userName') || '';
    setUserName(name);
    if (controlledTheme == null) {
      const savedTheme = localStorage.getItem('theme') || 'dark';
      setUncontrolledTheme(savedTheme);
      document.documentElement.classList.toggle('dark', savedTheme === 'dark');
    }
  }, [controlledTheme]);

  const initials = userName
    ? userName.split(' ').map((n) => n[0]).slice(0, 2).join('').toUpperCase()
    : 'U';

  const currentTheme = controlledTheme ?? uncontrolledTheme;

  const toggleTheme = () => {
    const next = currentTheme === 'light' ? 'dark' : 'light';
    if (setControlledTheme) {
      setControlledTheme(next);
      localStorage.setItem('theme', next);
    } else {
      setUncontrolledTheme(next);
      localStorage.setItem('theme', next);
      document.documentElement.classList.toggle('dark', next === 'dark');
    }
  };

  const handleLogout = () => {
    setShowConfirm(true);
    setDropdownOpen(false);
    setMenuOpen(false);
  };

  const confirmLogout = () => {
    localStorage.removeItem('token');
    localStorage.removeItem('userName');
    localStorage.removeItem('userEmail');
    setShowConfirm(false);
    navigate('/');
  };

  const cancelLogout = () => setShowConfirm(false);

  const toChat = () => navigate('/chat');
  const toHome = () => navigate('/home');

  // Logic hi·ªÉn th·ªã icon thay th·∫ø n·∫øu ·∫£nh b·ªã l·ªói
  const renderLogoContent = () => {
    if (imageError) {
      // D√πng ch·ªØ c√°i ho·∫∑c icon d·ª± ph√≤ng n·∫øu ·∫£nh l·ªói
      // TƒÉng k√≠ch th∆∞·ªõc ch·ªØ H l√™n
      return <span className="text-white font-extrabold text-xl">H</span>;
    }
    
    return (
      <img
        src={CUSTOM_LOGO_PATH}
        alt="Logo Hein AI"
        className="w-15 h-15 object-contain" // ƒê√£ tƒÉng k√≠ch th∆∞·ªõc ·∫£nh
        onError={() => setImageError(true)} // ƒê·∫∑t state l·ªói n·∫øu kh√¥ng t·∫£i ƒë∆∞·ª£c ·∫£nh
      />
    );
  };

  // S·ª≠a l·ªói "Objects are not valid as a React child" 
  // L·ªói x·∫£y ra do ƒëo·∫°n n√†y kh√¥ng c√≥ icon Lucide (MessageSquare ƒë√£ b·ªã lo·∫°i b·ªè import).
  // T√¥i ƒë√£ ƒë∆∞a MessageSquare v√†o l·∫°i import. 
  // ƒê·ªÉ tr√°nh l·ªói Object React Child, t√¥i ƒë·∫£m b·∫£o icon ƒë∆∞·ª£c render ƒë√∫ng.
  const renderChatHomeIcon = () => {
    if (isChatPage) {
        return <Home className="inline-block mr-2 w-4 h-4" />;
    }
    // D√πng l·∫°i MessageSquare (ƒë√£ import) thay v√¨ ch·ªâ d√πng 'üí¨'
    return <MessageSquare className="inline-block mr-2 w-4 h-4" />;
  };

  return (
    <>
      <nav className="fixed top-4 left-1/2 transform -translate-x-1/2 w-[calc(100%-2rem)] max-w-5xl bg-gradient-to-r from-sky-500/70 to-indigo-600/70 backdrop-blur-md border border-white/10 rounded-2xl shadow-xl px-4 py-3 z-50">
        <div className="flex items-center justify-between gap-4">
          <div className="flex items-center gap-3">
            <motion.button
              initial={{ scale: 0.98 }}
              whileHover={{ scale: 1.02 }}
              onClick={() => navigate('/')}
              className="flex items-center gap-3 focus:outline-none"
            >
              {/* ƒê√£ tƒÉng k√≠ch th∆∞·ªõc container (w-12 h-12) v√† x√≥a n·ªÅn xanh (bg-white/20, border, backdrop-blur) */}
              {/* ƒê√£ thay ƒë·ªïi rounded-xl th√†nh rounded-full ƒë·ªÉ bo cong tr√≤n ho√†n to√†n */}
              <div className="w-12 h-12 rounded-full flex items-center justify-center bg-transparent"> 
                {/* ƒê√£ thay th·∫ø SVG b·∫±ng component render logo */}
                {renderLogoContent()}
              </div>
              <div className="ml-1 text-left">
                <h1 className="text-white font-extrabold text-lg leading-tight">
                  {isChatPage ? 'Chat V·ªõi AI' : 'Hein'}
                </h1>
                <p className="text-white/80 text-xs -mt-1">{isChatPage ? 'Tr√≤ chuy·ªán ‚Äî Nhanh & Th√¥ng minh' : 'N·ªÅn t·∫£ng AI g·ªçn nh·∫π v√† unlimited'}</p>
              </div>
            </motion.button>
          </div>

          <div className="hidden md:flex items-center gap-3">
            <button
              onClick={() => (isChatPage ? toHome() : toChat())}
              className="text-white hover:text-white/95 font-semibold px-3 py-2 rounded-lg hover:bg-white/5 transition"
            >
              {/* S·ª¨A L·ªñI OBJECT: D√πng h√†m renderIcon ƒë√£ ƒë∆∞·ª£c chu·∫©n h√≥a */}
              {renderChatHomeIcon()} 
              {isChatPage ? 'Trang Ch·ªß' : 'Chat V·ªõi AI'}
            </button>

            <button onClick={toggleTheme} aria-label="Chuy·ªÉn giao di·ªán" className="p-2 rounded-lg hover:bg-white/5 transition">
              {currentTheme === 'light' ? <Moon className="w-5 h-5 text-white" /> : <Sun className="w-5 h-5 text-white" />}
            </button>

            <div className="relative">
              <button
                onClick={() => setDropdownOpen((s) => !s)}
                className="flex items-center gap-3 bg-white/5 hover:bg-white/6 px-3 py-1 rounded-xl focus:outline-none"
              >
                <div className="w-8 h-8 rounded-full bg-white/10 flex items-center justify-center text-sm font-semibold text-white">{initials}</div>
                <div className="text-white text-sm truncate max-w-[8rem]">{userName || 'Ng∆∞·ªùi d√πng'}</div>
              </button>

              <AnimatePresence>
                {dropdownOpen && (
                  <motion.div
                    initial={{ opacity: 0, y: -6 }}
                    animate={{ opacity: 1, y: 0 }}
                    exit={{ opacity: 0, y: -8 }}
                    className="absolute right-0 mt-2 w-48 bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-2 shadow-lg z-40"
                  >
                    <button onClick={() => { navigate('/profile'); setDropdownOpen(false); }} className="flex items-center gap-2 w-full text-left px-3 py-2 rounded hover:bg-white/3">
                      <User className="w-4 h-4" /> H·ªì s∆°
                    </button>
                    <button onClick={() => { navigate('/settings'); setDropdownOpen(false); }} className="flex items-center gap-2 w-full text-left px-3 py-2 rounded hover:bg-white/3">
                      ‚öôÔ∏è C√†i ƒë·∫∑t
                    </button>
                    <div className="border-t border-white/6 my-1"></div>
                    <button onClick={handleLogout} className="flex items-center gap-2 w-full text-left px-3 py-2 rounded hover:bg-red-600/20 text-red-400">
                      <LogOut className="w-4 h-4" /> ƒêƒÉng xu·∫•t
                    </button>
                  </motion.div>
                )}
              </AnimatePresence>
            </div>
          </div>

          <div className="md:hidden flex items-center gap-2">
            <button onClick={toggleTheme} aria-label="Chuy·ªÉn giao di·ªán" className="p-2 rounded-lg hover:bg-white/5 focus:outline-none">
              {currentTheme === 'light' ? <Moon className="w-5 h-5 text-white" /> : <Sun className="w-5 h-5 text-white" />}
            </button>
            <button onClick={() => setMenuOpen((s) => !s)} className="p-2 rounded-lg focus:outline-none">
              {menuOpen ? <X className="w-6 h-6 text-white" /> : <Menu className="w-6 h-6 text-white" />}
            </button>
          </div>
        </div>

        <AnimatePresence>
          {menuOpen && (
            <motion.div
              initial={{ height: 0, opacity: 0 }}
              animate={{ height: 'auto', opacity: 1 }}
              exit={{ height: 0, opacity: 0 }}
              className="md:hidden mt-3"
            >
              <div className="flex flex-col gap-2">
                <button onClick={() => { isChatPage ? toHome() : toChat(); setMenuOpen(false); }} className="text-white hover:bg-white/5 px-3 py-2 rounded-lg flex items-center gap-2">
                  <Home className="w-4 h-4" /> {isChatPage ? 'Trang Ch·ªß' : 'Chat V·ªõi AI'}
                </button>
                <button onClick={() => { navigate('/profile'); setMenuOpen(false); }} className="text-white hover:bg-white/5 px-3 py-2 rounded-lg flex items-center gap-2">
                  <User className="w-4 h-4" /> H·ªì s∆°
                </button>
                <button onClick={() => { navigate('/settings'); setMenuOpen(false); }} className="text-white hover:bg-white/5 px-3 py-2 rounded-lg flex items-center gap-2">
                  ‚öôÔ∏è C√†i ƒë·∫∑t
                </button>
                <button onClick={handleLogout} className="text-red-400 hover:bg-red-600/10 px-3 py-2 rounded-lg flex items-center gap-2">
                  <LogOut className="w-4 h-4" /> ƒêƒÉng xu·∫•t
                </button>
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </nav>

      <AnimatePresence>
        {showConfirm && (
          <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} className="fixed inset-0 z-50 flex items-center justify-center p-4">
            <div className="absolute inset-0 bg-black/50 backdrop-blur-sm" onClick={cancelLogout}></div>
            <motion.div initial={{ scale: 0.98, opacity: 0 }} animate={{ scale: 1, opacity: 1 }} exit={{ scale: 0.98, opacity: 0 }} className="relative bg-white/6 backdrop-blur-md border border-white/10 rounded-2xl p-5 max-w-sm w-full shadow-lg">
              <h3 className="text-lg font-semibold text-white">X√°c nh·∫≠n ƒëƒÉng xu·∫•t</h3>
              <p className="text-white/80 mt-2">B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng xu·∫•t kh·ªèi t√†i kho·∫£n n√†y? C√°c phi√™n l√†m vi·ªác s·∫Ω b·ªã k·∫øt th√∫c.</p>
              <div className="mt-4 flex justify-end gap-2">
                <button onClick={cancelLogout} className="px-4 py-2 rounded-lg bg-white/5 hover:bg-white/6 text-white">H·ªßy</button>
                <button onClick={confirmLogout} className="px-4 py-2 rounded-lg bg-red-500 hover:bg-red-600 text-white font-semibold">ƒêƒÉng xu·∫•t</button>
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </>
  );
}
